pipeline
{
    
    agent any
    
    tools{
        maven "maven3.8.5"
    }
    
   triggers {
  pollSCM '* * * * *'
}

options {
//Discard Old Build
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  //Adding the timestamos to the console output
  timestamps()
}

stages{
    
    stages{
    
        //Checkout Code Stage
        stage('CheckoutCode')
        {
        steps{
        sendSlackNotifications('STARTED')
        git branch: 'development', credentialsId: '9852c981-0468-4926-8add-30d642b28233', url: 'https://github.com/cwanji5/maven-web-application.git' 
        }   
    }
    
        //Build Stage
        stage('Build')
        {
        steps{
           sh "mvn clean package"
        }
    }
    
    //Execute SonarQube Report
        stage('ExecuteSonarQubeReport')
        {
        steps{
            sh "mvn sonar:sonar"    
        }            
        }
        
        //Upload artifacts into Artiactory repo
        stage('UploadIntoNexus')
        {
        steps{
            sh "mvn deploy"
        }
        }
        
        stage('DeployingIntoTomcat')
        {
        steps{
            sshagent(['b1020ded-858e-4260-a507-f1c2d414e0ef']) {
            sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.94.95.125:/opt/apache-tomcat-9.0.64/webapps"
            }
        }    
     }

}//Stages closing

post {
  success {
    sendSlackNotifications('SUCCESS')
  }
  failure {
   sendSlackNotifications('FAILURE')
  }
}

}//Pipeline closing




def sendSlackNotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESS'
  }

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'walmart')
  }
 
